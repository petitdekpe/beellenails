{% extends 'base.html.twig' %}

{% block title %}Paiement en attente{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-50 py-8 pt-32">
    <div class="max-w-2xl mx-auto px-4">
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <!-- Header -->
            <div class="bg-gradient-to-r from-yellow-400 to-yellow-500 px-6 py-8 text-white">
                <div class="flex items-center justify-center mb-4">
                    <div class="animate-spin rounded-full h-12 w-12 border-4 border-white border-t-transparent"></div>
                </div>
                <h1 class="text-2xl font-bold text-center mb-2">Paiement en cours...</h1>
                <p class="text-yellow-100 text-center">Veuillez patienter pendant le traitement de votre paiement</p>
            </div>

            <div class="p-6">
                <!-- Payment Details -->
                <div class="bg-gray-50 rounded-lg p-4 mb-6">
                    <h3 class="font-semibold text-gray-900 mb-3">D√©tails de la transaction</h3>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                        <div>
                            <span class="text-gray-600">R√©f√©rence:</span>
                            <span class="font-mono font-medium block">{{ payment.reference }}</span>
                        </div>
                        <div>
                            <span class="text-gray-600">Montant:</span>
                            <span class="font-semibold block">{{ payment.amount|number_format(0, ',', ' ') }} {{ payment.currency }}</span>
                        </div>
                        <div>
                            <span class="text-gray-600">Provider:</span>
                            <span class="font-medium block">
                                {% if payment.provider == 'feexpay' %}
                                    üí∏ FeexPay
                                {% elseif payment.provider == 'fedapay' %}
                                    üè¶ FedaPay
                                {% else %}
                                    {{ payment.provider|title }}
                                {% endif %}
                            </span>
                        </div>
                        <div>
                            <span class="text-gray-600">Type:</span>
                            <span class="font-medium block">
                                {% if payment.paymentType == 'rendezvous_advance' %}
                                    Acompte rendez-vous
                                {% elseif payment.paymentType == 'formation_full' %}
                                    Formation compl√®te
                                {% elseif payment.paymentType == 'formation_advance' %}
                                    Acompte formation
                                {% else %}
                                    {{ payment.paymentType|title }}
                                {% endif %}
                            </span>
                        </div>
                        {% if payment.description %}
                            <div class="md:col-span-2">
                                <span class="text-gray-600">Description:</span>
                                <span class="font-medium block">{{ payment.description }}</span>
                            </div>
                        {% endif %}
                    </div>
                </div>

                <!-- Instructions -->
                {% if payment.provider == 'feexpay' %}
                    <div class="bg-purple-50 border border-purple-200 rounded-lg p-4 mb-6">
                        <div class="flex items-start">
                            <svg class="w-5 h-5 text-purple-500 mt-0.5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                            </svg>
                            <div>
                                <h4 class="font-semibold text-purple-900 mb-2">Instructions Mobile Money</h4>
                                <ul class="text-sm text-purple-800 space-y-1">
                                    <li>‚Ä¢ Vous devriez recevoir un message sur votre t√©l√©phone</li>
                                    <li>‚Ä¢ Suivez les instructions pour confirmer le paiement</li>
                                    <li>‚Ä¢ Le traitement peut prendre quelques minutes</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                {% elseif payment.provider == 'fedapay' %}
                    <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                        <div class="flex items-start">
                            <svg class="w-5 h-5 text-blue-500 mt-0.5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                            </svg>
                            <div>
                                <h4 class="font-semibold text-blue-900 mb-2">Paiement en cours de traitement</h4>
                                <p class="text-sm text-blue-800">
                                    Votre paiement est en cours de v√©rification. Vous serez redirig√© automatiquement une fois le traitement termin√©.
                                </p>
                            </div>
                        </div>
                    </div>
                {% endif %}

                <!-- Status Check -->
                <div class="text-center">
                    <div class="mb-4">
                        <div class="inline-flex items-center px-4 py-2 bg-yellow-100 text-yellow-800 rounded-full text-sm font-medium">
                            <svg class="animate-pulse w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <circle cx="10" cy="10" r="3"></circle>
                            </svg>
                            Statut: En attente
                        </div>
                    </div>
                    
                    <p class="text-sm text-gray-600 mb-4">
                        Cette page se mettra √† jour automatiquement.
                    </p>
                    
                    <div class="space-y-3">
                        {% if payment.provider == 'feexpay' %}
                            <button id="force-api-check" onclick="forceApiCheck()" 
                                    class="inline-flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg text-sm font-medium transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                V√©rifier via API FeexPay
                            </button>
                        {% else %}
                            <button onclick="checkStatus()" 
                                    class="inline-flex items-center px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg text-sm font-medium transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                                V√©rifier le statut
                            </button>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Support -->
        <div class="mt-6 bg-white rounded-lg p-4 border border-gray-200">
            <div class="text-center">
                <h4 class="font-medium text-gray-900 mb-2">Besoin d'aide ?</h4>
                <p class="text-sm text-gray-600">
                    Si vous rencontrez des difficult√©s, contactez-nous √† 
                    <a href="mailto:beellenailscare@beellenails.com" class="text-pink-600 hover:text-pink-700 font-medium">beellenailscare@beellenails.com</a>
                </p>
            </div>
        </div>
    </div>
</div>

<script>
let statusCheckInterval;

function checkStatus() {
    fetch('/api/payment/status/{{ reference }}')
        .then(response => response.json())
        .then(data => {
            console.log('Status check:', data);
            
            if (data.is_successful) {
                window.location.href = '{{ path("generic_payment_success", {"reference": reference}) }}';
            } else if (data.status === 'failed' || data.status === 'declined') {
                window.location.href = '{{ path("generic_payment_error", {"reference": reference}) }}';
            }
        })
        .catch(error => {
            console.error('Error checking status:', error);
        });
}

// Force API check for FeexPay
function forceApiCheck(isAutomatic = false) {
    const button = document.getElementById('force-api-check');
    const originalText = button ? button.innerHTML : '';
    
    // Show loading state only for manual clicks
    if (!isAutomatic && button) {
        button.disabled = true;
        button.innerHTML = `
            <div class="animate-spin w-4 h-4 mr-2 border-2 border-white border-t-transparent rounded-full"></div>
            V√©rification en cours...
        `;
    }
    
    fetch('/payment/status/{{ reference }}?force_api=true')
        .then(response => response.json())
        .then(data => {
            console.log('Force API check:', data, 'automatic:', isAutomatic);
            
            if (data.status === 'successful' || data.status === 'completed') {
                window.location.href = '{{ path("generic_payment_success", {"reference": reference}) }}';
            } else if (data.status === 'failed' || data.status === 'declined') {
                window.location.href = '{{ path("generic_payment_error", {"reference": reference}) }}';
            } else if (!isAutomatic && button) {
                // Status still pending - restore button only for manual clicks
                button.disabled = false;
                button.innerHTML = originalText;
                
                // Show feedback
                const feedback = document.createElement('div');
                feedback.className = 'mt-2 text-sm text-gray-600';
                feedback.textContent = 'Status v√©rifi√© via API: ' + data.status;
                button.parentElement.appendChild(feedback);
                
                setTimeout(() => {
                    if (feedback.parentElement) {
                        feedback.parentElement.removeChild(feedback);
                    }
                }, 3000);
            }
        })
        .catch(error => {
            console.error('Error force checking status:', error);
            
            if (!isAutomatic && button) {
                // Restore button on error only for manual clicks
                button.disabled = false;
                button.innerHTML = originalText;
                alert('Erreur lors de la v√©rification API. Veuillez r√©essayer.');
            }
        });
}

// Auto-check with intelligent timing for FeexPay
let checkCount = 0;
const maxWebhookChecks = 8; // 40s / 5s = 8 v√©rifications webhook
const maxTotalChecks = 20;   // 100s / 5s = 20 v√©rifications totales

function intelligentCheck() {
    checkCount++;
    
    {% if payment.provider == 'feexpay' %}
        // Pour FeexPay: webhook d'abord, puis API apr√®s 40s
        if (checkCount > maxWebhookChecks) {
            // Apr√®s 40s, utiliser l'API FeexPay (appel automatique)
            forceApiCheck(true);
            return;
        } else {
            // Premi√®res 40s: v√©rification DB seulement
            checkStatus();
        }
    {% else %}
        // Pour autres providers: v√©rification normale
        checkStatus();
    {% endif %}
    
    // Continuer si pas termin√© et sous la limite
    if (checkCount < maxTotalChecks) {
        setTimeout(intelligentCheck, 5000);
    } else {
        // Timeout apr√®s 100s - rediriger vers erreur
        window.location.href = '{{ path("generic_payment_error", {"reference": reference}) }}?timeout=true';
    }
}

// D√©marrer la v√©rification intelligente
setTimeout(intelligentCheck, 5000);
</script>
{% endblock %}