{% extends 'base.html.twig' %}

{% block title %}{{ module.title }} - {{ enrollment.formation.Nom }}{% endblock %}

{% block body %}
<div class="min-h-screen bg-gray-50">
    <div class="pt-16 md:pt-20"></div>
    
    <div class="px-4 py-6 sm:px-6 lg:px-8 max-w-7xl mx-auto">
        <div class="flex flex-col lg:flex-row gap-8">
            
            <!-- Sidebar -->
            <div class="lg:w-80">
                {% include 'user_learning/_sidebar.html.twig' %}
            </div>

            <!-- Main Content -->
            <div class="flex-1 space-y-8">
                
                <!-- Module Header -->
                <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between mb-4">
                            <a href="{{ path('app_user_learning_formation_detail', {id: enrollment.id}) }}" 
                               class="inline-flex items-center text-sm text-gray-500 hover:text-gray-700">
                                ‚Üê Retour √† {{ enrollment.formation.Nom }}
                            </a>
                            
                            <div class="flex items-center space-x-2">
                                <span class="inline-flex items-center justify-center w-8 h-8 bg-pink-100 text-pink-600 rounded-full text-sm font-semibold">
                                    {{ module.position ?? 1 }}
                                </span>
                                <span class="text-sm text-gray-500">sur {{ enrollment.formation.modules|length }}</span>
                            </div>
                        </div>
                        
                        <h1 class="text-2xl font-bold text-gray-900 mb-2">{{ module.title }}</h1>

                        {% if module.description %}
                            <p class="text-gray-600 mb-4">{{ module.description }}</p>
                        {% endif %}
                        
                        <div class="flex flex-wrap gap-3">
                            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                ‚è±Ô∏è {{ module.formattedDuration }}
                            </span>
                            
                            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium 
                                {% if moduleProgress.status == 'completed' %}bg-green-100 text-green-800{% 
                                elseif moduleProgress.status == 'in_progress' %}bg-blue-100 text-blue-800{% 
                                else %}bg-gray-100 text-gray-800{% endif %}">
                                {% if moduleProgress.status == 'completed' %}‚úÖ Termin√©{% 
                                elseif moduleProgress.status == 'in_progress' %}‚ñ∂Ô∏è En cours{% 
                                else %}‚≠ï Non commenc√©{% endif %}
                            </span>
                            
                            {% if moduleProgress.timeSpent > 0 %}
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">
                                    üìä {{ moduleProgress.formattedTimeSpent }} √©tudi√©es
                                </span>
                            {% endif %}
                        </div>
                    </div>
                    
                    <!-- Progress Bar -->
                    {% if moduleProgress.status == 'in_progress' %}
                    <div class="px-6 py-4 bg-gray-50">
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm font-medium text-gray-700">Progression du module</span>
                            <span class="text-sm font-medium text-gray-900">{{ moduleProgress.completionPercentage }}%</span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="bg-blue-600 h-2 rounded-full transition-all duration-300" 
                                 style="width: {{ moduleProgress.completionPercentage }}%"></div>
                        </div>
                    </div>
                    {% endif %}
                </div>

                <!-- Video Section -->
                {% if module.youtubeUrl %}
                <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                    <div class="max-w-4xl mx-auto">
                        <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
                            <div id="youtube-player" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></div>
                            <div id="video-error" class="absolute inset-0 flex items-center justify-center bg-gray-900 text-white hidden">
                                <div class="text-center">
                                    <p class="mb-4">‚ùå Vid√©o non disponible pour l'int√©gration</p>
                                    <a href="{{ module.youtubeUrl }}" target="_blank"
                                       class="inline-flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-md">
                                        üé¨ Regarder sur YouTube
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="p-6">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-4">
                                <button id="play-pause-btn"
                                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700">
                                    ‚ñ∂Ô∏è Lecture
                                </button>

                                <a href="{{ module.youtubeUrl }}" target="_blank"
                                   class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                    üîó Ouvrir sur YouTube
                                </a>

                                {% if moduleProgress.videoPosition > 0 %}
                                    <span class="text-sm text-gray-600">
                                        Reprendre √† {{ moduleProgress.formattedVideoPosition }}
                                    </span>
                                {% endif %}
                            </div>

                            <div class="flex items-center space-x-2">
                                {% if moduleProgress.status != 'completed' %}
                                    <button id="mark-complete-btn"
                                            class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                        ‚úÖ Marquer comme termin√©
                                    </button>
                                {% endif %}

                                <div id="video-controls" class="text-sm text-gray-500">
                                    <span id="current-time">00:00</span> / <span id="duration">{{ module.formattedDuration }}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                {% endif %}

                <!-- Module Content -->
                {% if module.description %}
                <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h3 class="text-lg font-bold text-gray-900">üìù Description du module</h3>
                    </div>
                    <div class="p-6 prose max-w-none">
                        {{ module.description|nl2br }}
                    </div>
                </div>
                {% endif %}

                <!-- Navigation -->
                <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                    <div class="p-6">
                        <div class="flex items-center justify-between">
                            <div>
                                {% set previousModule = null %}
                                {% for progress in allProgresses %}
                                    {% if progress.module.position < module.position and (previousModule is null or progress.module.position > previousModule.position) %}
                                        {% set previousModule = progress.module %}
                                    {% endif %}
                                {% endfor %}
                                {% if previousModule %}
                                    <a href="{{ path('app_user_learning_module', {enrollmentId: enrollment.id, moduleId: previousModule.id}) }}"
                                       class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                        ‚Üê Module pr√©c√©dent
                                    </a>
                                {% endif %}
                            </div>
                            
                            <div class="text-center">
                                <p class="text-sm text-gray-600 mb-2">Module {{ module.position ?? 1 }} sur {{ enrollment.formation.modules|length }}</p>
                                <div class="w-32 bg-gray-200 rounded-full h-2">
                                    <div class="bg-pink-600 h-2 rounded-full"
                                         style="width: {{ ((module.position ?? 1) / enrollment.formation.modules|length * 100) }}%"></div>
                                </div>
                            </div>
                            
                            <div>
                                {% set nextModule = null %}
                                {% for progress in allProgresses %}
                                    {% if progress.module.position > module.position and (nextModule is null or progress.module.position < nextModule.position) %}
                                        {% set nextModule = progress.module %}
                                    {% endif %}
                                {% endfor %}
                                {% if nextModule %}
                                    <a href="{{ path('app_user_learning_module', {enrollmentId: enrollment.id, moduleId: nextModule.id}) }}"
                                       class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700">
                                        Module suivant ‚Üí
                                    </a>
                                {% else %}
                                    {% if enrollment.progressPercentage == 100 %}
                                        <a href="{{ path('app_user_learning_certificate', {enrollmentId: enrollment.id}) }}"
                                           class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700">
                                            üìú Obtenir le certificat
                                        </a>
                                    {% else %}
                                        <a href="{{ path('app_user_learning_formation_detail', {id: enrollment.id}) }}"
                                           class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                            Retour √† la formation
                                        </a>
                                    {% endif %}
                                {% endif %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- YouTube API Script -->
<script src="https://www.youtube.com/iframe_api"></script>
<script>
    let player;
    let progressSaveInterval;
    let enrollmentId = {{ enrollment.id }};
    let moduleId = {{ module.id }};
    let startPosition = {{ moduleProgress.videoPosition }};
    let isCompleted = {{ moduleProgress.status == 'completed' ? 'true' : 'false' }};
    let progressUrl = '{{ path('app_user_learning_api_progress', {enrollmentId: enrollment.id, moduleId: module.id}) }}';
    let completeUrl = '{{ path('app_user_learning_api_complete', {enrollmentId: enrollment.id, moduleId: module.id}) }}';

    console.log('Progress URL:', progressUrl);
    console.log('Complete URL:', completeUrl);

    // YouTube Player API
    function onYouTubeIframeAPIReady() {
        const videoId = '{{ module.youtubeVideoId }}';
        console.log('Video ID:', videoId);

        if (!videoId) {
            showVideoError('ID vid√©o YouTube non trouv√©');
            return;
        }

        try {
            player = new YT.Player('youtube-player', {
                height: '100%',
                width: '100%',
                videoId: videoId,
                playerVars: {
                    'autoplay': 0,
                    'controls': 1,
                    'start': startPosition,
                    'rel': 0,
                    'modestbranding': 1
                },
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange,
                    'onError': onPlayerError
                }
            });
        } catch (error) {
            console.error('Erreur lors de la cr√©ation du player YouTube:', error);
            showVideoError('Erreur lors du chargement du player vid√©o');
        }
    }

    function onPlayerError(event) {
        console.error('Erreur YouTube Player:', event.data);
        let errorMessage = 'Erreur de lecture vid√©o';

        switch(event.data) {
            case 2:
                errorMessage = 'ID vid√©o invalide';
                break;
            case 5:
                errorMessage = 'Erreur de lecture HTML5';
                break;
            case 100:
                errorMessage = 'Vid√©o introuvable';
                break;
            case 101:
            case 150:
                errorMessage = 'Vid√©o non disponible (restrictions du propri√©taire)';
                break;
        }

        showVideoError(errorMessage);
    }

    function showVideoError(message) {
        document.getElementById('youtube-player').style.display = 'none';
        const errorDiv = document.getElementById('video-error');
        errorDiv.querySelector('p').textContent = '‚ùå ' + message;
        errorDiv.classList.remove('hidden');
    }

    function onPlayerReady(event) {
        // Start saving progress every 10 seconds when video starts
        updateTimeDisplay();
        
        // Resume from saved position if exists
        if (startPosition > 0) {
            player.seekTo(startPosition, true);
        }
    }

    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING) {
            document.getElementById('play-pause-btn').innerHTML = '‚è∏Ô∏è Pause';
            startProgressTracking();
        } else if (event.data == YT.PlayerState.PAUSED) {
            document.getElementById('play-pause-btn').innerHTML = '‚ñ∂Ô∏è Lecture';
            stopProgressTracking();
            saveProgress();
        } else if (event.data == YT.PlayerState.ENDED) {
            stopProgressTracking();
            if (!isCompleted) {
                markModuleComplete();
            }
        }
    }

    function startProgressTracking() {
        if (progressSaveInterval) {
            clearInterval(progressSaveInterval);
        }
        
        progressSaveInterval = setInterval(() => {
            saveProgress();
            updateTimeDisplay();
            checkAutoCompletion();
        }, 10000); // Save every 10 seconds
    }

    function stopProgressTracking() {
        if (progressSaveInterval) {
            clearInterval(progressSaveInterval);
        }
    }

    function saveProgress() {
        if (!player || !player.getCurrentTime) return;
        
        let currentTime = Math.floor(player.getCurrentTime());
        let duration = Math.floor(player.getDuration());
        
        fetch(progressUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
                videoPosition: currentTime,
                timeSpent: currentTime - startPosition + {{ moduleProgress.timeSpent }}
            })
        }).catch(error => console.error('Error saving progress:', error));
    }

    function checkAutoCompletion() {
        if (isCompleted || !player) return;
        
        let currentTime = player.getCurrentTime();
        let duration = player.getDuration();
        
        if (duration > 0 && currentTime / duration >= 0.95) {
            markModuleComplete();
        }
    }

    function markModuleComplete() {
        if (isCompleted) return;
        
        fetch(completeUrl, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                isCompleted = true;
                location.reload(); // Refresh to update UI
            }
        }).catch(error => console.error('Error marking complete:', error));
    }

    function updateTimeDisplay() {
        if (!player || !player.getCurrentTime) return;
        
        let currentTime = Math.floor(player.getCurrentTime());
        let duration = Math.floor(player.getDuration());
        
        document.getElementById('current-time').textContent = formatTime(currentTime);
        if (duration > 0) {
            document.getElementById('duration').textContent = formatTime(duration);
        }
    }

    function formatTime(seconds) {
        let mins = Math.floor(seconds / 60);
        let secs = seconds % 60;
        return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
    }

    // Event listeners
    document.getElementById('play-pause-btn').addEventListener('click', function() {
        if (player.getPlayerState() === YT.PlayerState.PLAYING) {
            player.pauseVideo();
        } else {
            player.playVideo();
        }
    });

    {% if moduleProgress.status != 'completed' %}
    document.getElementById('mark-complete-btn').addEventListener('click', function() {
        if (confirm('√ätes-vous s√ªr de vouloir marquer ce module comme termin√© ?')) {
            markModuleComplete();
        }
    });
    {% endif %}

    // Save progress when leaving page
    window.addEventListener('beforeunload', function() {
        if (player && player.getCurrentTime) {
            navigator.sendBeacon(progressUrl, 
                JSON.stringify({
                    videoPosition: Math.floor(player.getCurrentTime()),
                    timeSpent: Math.floor(player.getCurrentTime()) - startPosition + {{ moduleProgress.timeSpent }}
                })
            );
        }
    });
</script>
{% endblock %}